

% Measurement should be raw vals from 6 sensors, all the math done here
%
function likelihood = mlf1_1(pf, predictParticles, measurement, sensorPositions)
    
    % First map measurements to most-likely radius from each sensor
    % Get from Andrew
    
    % For now,
    dist = measurement.*1;
    
    
    % Then make distribution around each sensor (relative to origin!)
    %mean = radius from above
    stddev = 1; % meter
    scale = 1;  % scaling factor
    
    numParticles = length(predictParticles);
    numSensors = length(measurement);
    
    % Weight given to each particle by each sensor
    sensor = double.empty(numSensors, numParticles);
    
    % One line per sensor
    sensor(1, :) = (1/sqrt(2*pi*stddev^2)) * exp( ...
        ((predictParticles(1, :)^2 .+ sensorPositions(1, 1)) + ...
         (predictParticles(2, :)^2 .+ sensorPositions(1, 2))) ... 
        /(2*stddev^2);
    
    sensor(2, :) = (1/sqrt(2*pi*stddev^2)) * exp( ...
        ((predictParticles(1, :)^2 .+ sensorPositions(2, 1)) + ...
         (predictParticles(2, :)^2 .+ sensorPositions(2, 2))) ... 
        /(2*stddev^2);
    
    sensor(3, :) = (1/sqrt(2*pi*stddev^2)) * exp( ...
        ((predictParticles(1, :)^2 .+ sensorPositions(3, 1)) + ...
         (predictParticles(2, :)^2 .+ sensorPositions(3, 2))) ... 
        /(2*stddev^2);
    
    sensor(4, :) = (1/sqrt(2*pi*stddev^2)) * exp( ...
        ((predictParticles(1, :)^2 .+ sensorPositions(4, 1)) + ...
         (predictParticles(2, :)^2 .+ sensorPositions(4, 2))) ... 
        /(2*stddev^2);
    
    sensor(5, :) = (1/sqrt(2*pi*stddev^2)) * exp( ...
        ((predictParticles(1, :)^2 .+ sensorPositions(5, 1)) + ...
         (predictParticles(2, :)^2 + sensorPositions(5, 2))) ... 
        /(2*stddev^2);
    
    sensor(6, :) = (1/sqrt(2*pi*stddev^2)) * exp( ...
        ((predictParticles(1, :)^2 + sensorPositions(6, 1)) + ...
         (predictParticles(2, :)^2 + sensorPositions(6, 2))) ... 
        /(2*stddev^2);
    
    
    
    
    
    % Sum all distributions on top of each other
    likelihood = scale*sum(sensor, 1);
    
    % Return summation
    
end
